<!--

    =============================================================================

    ORCID (R) Open Source
    http://orcid.org

    Copyright (c) 2012-2014 ORCID, Inc.
    Licensed under an MIT-Style License (MIT)
    http://orcid.org/open-source-license

    This copyright and license information (including a link to the full license)
    shall be included in its entirety in all copies or substantial portion of
    the software.

    =============================================================================

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet id="ADD-ADMINISTRATIVE-CHANGES-OPTION-COLUMN" author="Will Simpson">
        <preConditions onFail="MARK_RAN">
            <not><columnExists tableName="profile" columnName="send_administrative_change_notifications"/></not>
        </preConditions>
        <addColumn tableName="profile">
            <column name="send_administrative_change_notifications" type="boolean"/>
        </addColumn>
        
    </changeSet>
    <changeSet id="POPULATE-ADMINISTRATIVE-CHANGES-OPTION-COLUMN" author="Will Simposn" dbms="postgresql">
        <createProcedure>
<![CDATA[
CREATE OR REPLACE FUNCTION populate_send_administrative_change_notifications() RETURNS VOID AS $$
DECLARE
    orcid_to_update VARCHAR;
    orcid_cursor CURSOR FOR SELECT orcid FROM profile WHERE send_administrative_change_notifications IS NULL AND send_change_notifications IS NOT NULL;
BEGIN
    RAISE NOTICE 'Populating send administrative change notifications option...';
    FOR orcid_record IN orcid_cursor
    LOOP
        orcid_to_update := orcid_record.orcid;
        RAISE NOTICE 'Updating % ', orcid_to_update;
        EXECUTE 'UPDATE profile set send_administrative_change_notifications = send_change_notifications WHERE orcid = $1' USING orcid_to_update;
    END LOOP;

    RAISE NOTICE 'Finished populating send administrative change notifications option.';
    RETURN;
END;
$$ LANGUAGE plpgsql;
]]>
        </createProcedure>
        <sql>select populate_send_administrative_change_notifications()</sql>
    </changeSet>
    
</databaseChangeLog>